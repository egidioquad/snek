import { NextApiRequest, NextApiResponse } from 'next';
import connectMongoDB from '@/libs/mongodb';
import UserData from '@/models/UserData';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
	const {
		query: { btcAddress },
		method,
	} = req;

	await connectMongoDB();

	switch (method) {
		case 'GET':
			try {
				const user = await UserData.findOne({ btcAddress: btcAddress });
				if (!user) {
					return res.status(404).json({ message: 'User not found' });

				}
				res.status(200).json(user);
			} catch (error) {
				res.status(500).json({ message: 'Error fetching user data' });
			}
			break;
		case 'POST':
			try {
				const { highscore } = req.body;
				const user = await UserData.findOne({ btcAddress });
				if (user) {
					res.status(400).json({ message: 'User already exists' });
					return;
				}
				const newUser = await UserData.create({ btcAddress, highscore });
				res.status(201).json(newUser);
			} catch (error) {
				res.status(500).json({ message: 'Error creating user data' });
			}
			break;
		default:
			res.setHeader('Allow', ['GET', 'POST']);
			res.status(405).end(`Method ${method} Not Allowed`);
	}
}
